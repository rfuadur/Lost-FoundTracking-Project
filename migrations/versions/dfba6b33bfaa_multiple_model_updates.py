"""multiple model updates

Revision ID: dfba6b33bfaa
Revises:
Create Date: 2025-05-09 01:43:49.791321

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'dfba6b33bfaa'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###

    # Check if notification table exists before creating
    conn = op.get_bind()
    inspector = sa.inspect(conn)
    tables = inspector.get_table_names()

    if 'notification' not in tables:
        op.create_table('notification',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('user_id', sa.Integer(), nullable=False),
        sa.Column('title', sa.String(length=100), nullable=False),
        sa.Column('message', sa.String(length=500), nullable=False),
        sa.Column('link', sa.String(length=200), nullable=True),
        sa.Column('is_read', sa.Boolean(), nullable=True),
        sa.Column('created_at', sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
        sa.PrimaryKeyConstraint('id')
        )

    if 'chat' not in tables:
        op.create_table('chat',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('post_id', sa.Integer(), nullable=False),
        sa.Column('sender_id', sa.Integer(), nullable=False),
        sa.Column('receiver_id', sa.Integer(), nullable=False),
        sa.Column('message', sa.Text(), nullable=False),
        sa.Column('created_at', sa.DateTime(), nullable=True),
        sa.Column('is_read', sa.Boolean(), nullable=True),
        sa.ForeignKeyConstraint(['post_id'], ['post.id'], ),
        sa.ForeignKeyConstraint(['receiver_id'], ['user.id'], ),
        sa.ForeignKeyConstraint(['sender_id'], ['user.id'], ),
        sa.PrimaryKeyConstraint('id')
        )

    # The batch_alter_table will handle existing columns automatically
    with op.batch_alter_table('user_report', schema=None) as batch_op:
        batch_op.add_column(sa.Column('post_id', sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column('claim_id', sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column('chat_id', sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column('type', sa.String(length=50), nullable=False))
        batch_op.add_column(sa.Column('resolved_at', sa.DateTime(), nullable=True))
        batch_op.add_column(sa.Column('admin_notes', sa.String(length=500), nullable=True))
        batch_op.create_foreign_key('fk_user_report_chat', 'chat', ['chat_id'], ['id'])
        batch_op.create_foreign_key('fk_user_report_claim', 'verification_claim', ['claim_id'], ['id'])
        batch_op.create_foreign_key('fk_user_report_post', 'post', ['post_id'], ['id'])

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('user_report', schema=None) as batch_op:
        batch_op.drop_constraint('fk_user_report_post', type_='foreignkey')
        batch_op.drop_constraint('fk_user_report_claim', type_='foreignkey')
        batch_op.drop_constraint('fk_user_report_chat', type_='foreignkey')
        batch_op.drop_column('admin_notes')
        batch_op.drop_column('resolved_at')
        batch_op.drop_column('type')
        batch_op.drop_column('chat_id')
        batch_op.drop_column('claim_id')
        batch_op.drop_column('post_id')

    op.drop_table('chat')
    op.drop_table('notification')
    # ### end Alembic commands ###
